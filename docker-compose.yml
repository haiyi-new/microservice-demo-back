version: '3'
services:
  rabbitmq:
    image: rabbitmq:management
    restart: unless-stopped
    ports:
      - 15672:15672

  apigateway:
    build:
      context: ApiGateway
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq

  consumer:
    build:
      context: Consumer
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq

  report:
    build:
      context: Report
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    restart: unless-stopped
    volumes:
      - ./reports:/app/reports
    environment:
      - RABBITMQ_HOST=rabbitmq

  mail:
    build:
      context: Email
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq
      - USERNAME=c95846e0451080
      - PASSWORD=abdcebc56e09df

  db:
    image: postgres:12.9
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      cluster.name: fusionauth
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      ES_JAVA_OPTS: ${ES_JAVA_OPTS}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "--write-out",
          "'HTTP %{http_code}'",
          "--silent",
          "--output",
          "/dev/null",
          "http://localhost:9200/"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - search_data:/usr/share/elasticsearch/data

  fusionauth:
    image: fusionauth/fusionauth-app:latest
    depends_on:
      db:
        condition: service_healthy
      search:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: development
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      SEARCH_SERVERS: http://search:9200
      SEARCH_TYPE: elasticsearch
      FUSIONAUTH_CORS_ALLOWED_ORIGINS: "*"
      FUSIONAUTH_CORS_ALLOWED_METHODS: "GET, POST, PUT, DELETE, OPTIONS"
      FUSIONAUTH_CORS_ALLOWED_HEADERS: "Accept, Access-Control-Request-Headers, Access-Control-Request-Method, Authorization, Content-Type, Last-Modified, Origin, X-FusionAuth-TenantId, X-Requested-With"
      FUSIONAUTH_CORS_EXPOSED_HEADERS: "Access-Control-Allow-Origin, Access-Control-Allow-Credentials"
      FUSIONAUTH_CORS_ALLOW_CREDENTIALS: true
      FUSIONAUTH_CORS_MAX_AGE: 3600
    restart: unless-stopped
    ports:
      - 9011:9011
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config

networks:
  db_net:
    driver: bridge
  search_net:
    driver: bridge

volumes:
  db_data:
  fusionauth_config:
  search_data:
